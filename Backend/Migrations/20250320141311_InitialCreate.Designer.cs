// <auto-generated />
using System;
using Backend.database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(PollContext))]
    [Migration("20250320141311_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Backend.database.tbl_answer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("tbl_question_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tbl_questionid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tbl_user_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tbl_userid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("value")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("tbl_questionid");

                    b.HasIndex("tbl_userid");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Backend.database.tbl_poll", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("Backend.database.tbl_question", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("qkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("tbl_poll_id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tbl_pollid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("tbl_pollid");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Backend.database.tbl_user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.database.tbl_answer", b =>
                {
                    b.HasOne("Backend.database.tbl_question", null)
                        .WithMany("tbl_Answers")
                        .HasForeignKey("tbl_questionid");

                    b.HasOne("Backend.database.tbl_user", null)
                        .WithMany("tbl_Answers")
                        .HasForeignKey("tbl_userid");
                });

            modelBuilder.Entity("Backend.database.tbl_question", b =>
                {
                    b.HasOne("Backend.database.tbl_poll", null)
                        .WithMany("tbl_Questions")
                        .HasForeignKey("tbl_pollid");
                });

            modelBuilder.Entity("Backend.database.tbl_poll", b =>
                {
                    b.Navigation("tbl_Questions");
                });

            modelBuilder.Entity("Backend.database.tbl_question", b =>
                {
                    b.Navigation("tbl_Answers");
                });

            modelBuilder.Entity("Backend.database.tbl_user", b =>
                {
                    b.Navigation("tbl_Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
